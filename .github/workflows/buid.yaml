name: Quiz-app CI

on: 
  push:
    branches: "main" 
  pull_request:
    branches: "main"

jobs: 
  frontend-build:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./quiz-app
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install project dependencies
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true

      - name: Build project
        run: npm run build
      
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v8
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: quiz-app
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.sources=src/
            -Dsonar.verbose=true
      
      - name: Trivy Files scan
        run:
          trivy fs --format table -o trivy-fs-report.html .
      
      - name: setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v3 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.FRONTEND_REPO}}
          IMAGE_TAG: ${{github.sha}}
        run: |
          echo "Building Docker Image"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      
      - name: Trivy Image scan
        run:
          trivy image --format table -o trivy-image-report.html $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Push Docker image to Amazon ECR
        id: push-image
        # env:
        #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #   ECR_REPOSITORY: ${{ secrets.FRONTEND_REPO }}
        #   IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Pushing Docker Image"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      # - name: image push to ECR
      #   uses: aws-actions/amazon-ecr-push-image@v1
      #   with:
      #     source: ${{ steps.build-image.outputs.image }}
      #     repository: ${{ secrets.FRONTEND_REPO }}
      #     tag: ${{ github.sha }}



