name: React APP Pipeline

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quiz-app
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Use Node.js ${{ matrix.node-version }} - ${{ matrix.architecture }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        architecture: ${{ matrix.architecture }}
    
    - name: Install project dependencies
      run: |
        npm i
        npm run lint
        npm run prettier
        npm run test
      env: 
        CI: true
    
    - name: build artifacts
      run: npm run build

    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./quiz-app/dist
    
    - name: Setup Sonar-scanner
      uses: warchant/setup-sonar-scanner@v8

    - name: SAST with SonarCloud 
      uses: sonarsource/sonarcloud-github-action@master
      env:
        _GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projecBaseDir: ./quiz-app
        args: >
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.sources=src/
          -Dsonar.verbose=true
    
    - name: Trivy FS Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "fs"
        ignore-unfixed: true
        format: "sarif"
        output: trivy-results.sarif
        severity: "CRITICAL"
    
    - name: Upload Trivy scan reslts to github security tab 
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: trivy-results.sarif
  
  deploy:
    needs: build-test-scan
    runs-on: ubuntu-latest
    steps:

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    
    - name: Sync artifacts to s3
      run: aws s3 sync dist s3://barneywang.click-dev
    


      

